basePath: /v1
definitions:
  api.CreateTriggerRequest:
    properties:
      description:
        description: Additional information about the trigger
        type: string
      gpiopin:
        description: The GPIO pin the sensor or button is on
        type: integer
      minimumsecondsbeforeretrigger:
        description: Minimum time (in seconds) before a retrigger
        type: integer
      name:
        description: The trigger name
        type: string
      webhooks:
        description: The webhooks to send when triggered
        items:
          $ref: '#/definitions/data.WebHook'
        type: array
    type: object
  api.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  api.SystemResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  api.UpdateTriggerRequest:
    properties:
      description:
        description: Additional information about the trigger
        type: string
      enabled:
        description: Trigger enabled or not
        type: boolean
      gpiopin:
        description: The GPIO pin the sensor or button is on
        type: integer
      id:
        description: Unique Trigger ID
        type: string
      minimumsecondsbeforeretrigger:
        description: Minimum time (in seconds) before a retrigger
        type: integer
      name:
        description: The trigger name
        type: string
      webhooks:
        description: The webhooks to send when triggered
        items:
          $ref: '#/definitions/data.WebHook'
        type: array
    type: object
  data.WebHook:
    properties:
      body:
        description: The HTTP body to send.  This can be empty
        items:
          type: integer
        type: array
      headers:
        additionalProperties:
          type: string
        description: The HTTP headers to send
        type: object
      url:
        description: The URL to connect to
        type: string
    type: object
info:
  contact: {}
  description: fxTrigger REST based management for GPIO/Sensor -> endpoint triggers
    (on Raspberry Pi)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: fxTrigger
  version: "1.0"
paths:
  /trigger/fire/{id}:
    post:
      consumes:
      - application/json
      description: Fires a trigger in the system
      parameters:
      - description: The trigger id to fire
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Fires a trigger in the system
      tags:
      - triggers
  /triggers:
    get:
      consumes:
      - application/json
      description: List all triggers in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: List all triggers in the system
      tags:
      - triggers
    post:
      consumes:
      - application/json
      description: Create a new trigger
      parameters:
      - description: The trigger to create
        in: body
        name: trigger
        required: true
        schema:
          $ref: '#/definitions/api.CreateTriggerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create a new trigger
      tags:
      - triggers
    put:
      consumes:
      - application/json
      description: Update a trigger
      parameters:
      - description: The trigger to update.  Must include trigger.id
        in: body
        name: trigger
        required: true
        schema:
          $ref: '#/definitions/api.UpdateTriggerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update a trigger
      tags:
      - triggers
  /triggers/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a trigger in the system
      parameters:
      - description: The trigger id to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Deletes a trigger in the system
      tags:
      - triggers
swagger: "2.0"
